# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'calibrationgui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, QtSerialPort


# Global Vars that are used with serial receive
import letterCode

capPin = "none"
deg = "none"
calSeq = 0
tuckCal = 0
restCal = 0
extendedCal = 0
calibrated = False

class Ui_Form(object):

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(802, 500)
        Form.setMinimumSize(QtCore.QSize(802, 500))
        Form.setMaximumSize(QtCore.QSize(802, 500))
        self.ExtendIMG = QtWidgets.QLabel(Form)
        self.ExtendIMG.setGeometry(QtCore.QRect(20, 60, 541, 271))
        self.ExtendIMG.setText("")
        self.ExtendIMG.setPixmap(QtGui.QPixmap("3.png"))
        self.ExtendIMG.setScaledContents(True)
        self.ExtendIMG.setAlignment(QtCore.Qt.AlignCenter)
        self.ExtendIMG.setObjectName("ExtendIMG")
        self.Enter = QtWidgets.QPushButton(Form, clicked=lambda:self.calibrationSequence(Form))
        self.Enter.setGeometry(QtCore.QRect(20, 460, 761, 28))
        self.Enter.setObjectName("Enter")
        self.CalibrationLog = QtWidgets.QTextEdit(Form)
        self.CalibrationLog.setGeometry(QtCore.QRect(20, 350, 761, 101))
        self.CalibrationLog.setObjectName("CalibrationLog")
        self.Rest_Value = QtWidgets.QLabel(Form)
        self.Rest_Value.setGeometry(QtCore.QRect(590, 190, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setBold(False)
        font.setWeight(50)
        self.Rest_Value.setFont(font)
        self.Rest_Value.setObjectName("Rest_Value")
        self.Extended_Text = QtWidgets.QLabel(Form)
        self.Extended_Text.setGeometry(QtCore.QRect(590, 260, 231, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Extended_Text.setFont(font)
        self.Extended_Text.setObjectName("Extended_Text")
        self.TuckIMG = QtWidgets.QLabel(Form)
        self.TuckIMG.setGeometry(QtCore.QRect(20, 60, 541, 271))
        self.TuckIMG.setText("")
        self.TuckIMG.setPixmap(QtGui.QPixmap("1.png"))
        self.TuckIMG.setScaledContents(True)
        self.TuckIMG.setAlignment(QtCore.Qt.AlignCenter)
        self.TuckIMG.setObjectName("TuckIMG")
        self.Rest_Text = QtWidgets.QLabel(Form)
        self.Rest_Text.setGeometry(QtCore.QRect(590, 160, 181, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Rest_Text.setFont(font)
        self.Rest_Text.setObjectName("Rest_Text")
        self.RestIMG = QtWidgets.QLabel(Form)
        self.RestIMG.setGeometry(QtCore.QRect(20, 60, 541, 271))
        self.RestIMG.setText("")
        self.RestIMG.setPixmap(QtGui.QPixmap("2.png"))
        self.RestIMG.setScaledContents(True)
        self.RestIMG.setAlignment(QtCore.Qt.AlignCenter)
        self.RestIMG.setObjectName("RestIMG")
        self.Extended_Value = QtWidgets.QLabel(Form)
        self.Extended_Value.setGeometry(QtCore.QRect(590, 290, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.Extended_Value.setFont(font)
        self.Extended_Value.setObjectName("Extended_Value")
        self.Tuck_Text = QtWidgets.QLabel(Form)
        self.Tuck_Text.setGeometry(QtCore.QRect(590, 60, 201, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.Tuck_Text.setFont(font)
        self.Tuck_Text.setObjectName("Tuck_Text")
        self.CalibrationStart = QtWidgets.QPushButton(Form, text="Connect", checkable=True, toggled=self.startCalibration)
        self.CalibrationStart.setGeometry(QtCore.QRect(30, 10, 741, 31))
        self.CalibrationStart.setObjectName("CalibrationStart")
        self.Tuck_Value = QtWidgets.QLabel(Form)
        self.Tuck_Value.setGeometry(QtCore.QRect(590, 90, 121, 51))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.Tuck_Value.setFont(font)
        self.Tuck_Value.setObjectName("Tuck_Value")
        self.Enter.raise_()
        self.CalibrationLog.raise_()
        self.Rest_Value.raise_()
        self.Extended_Text.raise_()
        self.Rest_Text.raise_()
        self.Extended_Value.raise_()
        self.Tuck_Text.raise_()
        self.CalibrationStart.raise_()
        self.Tuck_Value.raise_()
        self.RestIMG.raise_()
        self.ExtendIMG.raise_()
        self.TuckIMG.raise_()

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)
        self.serial = QtSerialPort.QSerialPort(
            'COM3',
            baudRate=QtSerialPort.QSerialPort.Baud115200,
            readyRead=self.receive
        )

    def receive(self):
        global capPin, deg

        while self.serial.canReadLine():
            text = self.serial.readLine().data().decode()
            text = text.rstrip('\r\n')
            tempText = text.rsplit(" ")

            capPin = tempText[0]
            deg = tempText[1].split(".")[0]

            print("Cap: " + capPin + " Flex: " + deg)



    def startCalibration(self, checked):
        global calSeq
        self.CalibrationStart.setText("Stop Calibration" if checked else "Start Calibration")
        if checked:
            if not self.serial.isOpen():
                self.CalibrationLog.append("Calibration Started!")
                self.CalibrationLog.append("Please tuck in your thumb and activate a cap sensor before hitting submit.")
                calSeq = 0
                if not self.serial.open(QtCore.QIODevice.ReadWrite):
                    self.CalibrationStart.setChecked(False)
        else:
            self.serial.close()

    def calibrationSequence(self, Form):
        global calSeq, tuckCal, restCal, extendedCal
        # print(self.CalibrationStart.isChecked())
        if self.CalibrationStart.isChecked():
            if calSeq == 0:
                tuckCal = deg
                self.CalibrationLog.append("Tuck Thumb set to > " + tuckCal)
                self.CalibrationLog.append("Please place your thumb in a typical rest position and activate a cap sensor before hitting submit.")
                self.Tuck_Value.setText(tuckCal)
                self.RestIMG.raise_()
                calSeq = 1
            elif calSeq == 1:
                restCal = deg
                self.CalibrationLog.append("Rest Thumb set to > " + restCal)
                self.CalibrationLog.append("Please extend your thumb and activate a cap sensor before hitting submit.")
                self.Rest_Value.setText(deg)
                self.ExtendIMG.raise_()
                calSeq = 2
            elif calSeq == 2:
                extendedCal = deg
                self.CalibrationLog.append("Extended Thumb set to > " + extendedCal)
                self.CalibrationLog.append("Calibration is completed! Start Calibration again if there is an issue with any of the values. Else, sumbit the calibration.")
                self.Extended_Value.setText(extendedCal)
                self.TuckIMG.raise_()
                self.CalibrationStart.toggle()
        else:
            # getCalVals() #Read this from main?
            Form.hide()


    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Calibration UI"))
        self.Enter.setText(_translate("Form", "Submit"))
        self.Rest_Value.setText(_translate("Form", "0"))
        self.Extended_Text.setText(_translate("Form", "Current Extended Value:"))
        self.Rest_Text.setText(_translate("Form", "Current Rest Value:"))
        self.Extended_Value.setText(_translate("Form", "0"))
        self.Tuck_Text.setText(_translate("Form", "Current Tuck Value:"))
        self.CalibrationStart.setText(_translate("Form", "Start Calibration"))
        self.Tuck_Value.setText(_translate("Form", "0"))

def getCalVals():
    global calibrated
    calibrated = True
    return tuckCal, restCal, extendedCal

def calGot():
    global calibrated
    if calibrated == True:
        return True

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())

